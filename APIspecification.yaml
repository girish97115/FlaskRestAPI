openapi: 3.0.0
info:
  version: 1.0.0
  title: Simple Flask API
  description: A simple Flask API to Maintain Notes

servers:
  - url: localhost:8081

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []

paths:
  /Notes:
    get:
      description: Returns a list of notes
      
      responses:
        "200":
          description: Successfully returned a list of artists
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    content:
                      type: integer
                    creation_date:
                      type: Date
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    post:
      description: Lets create new note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                content:
                  type: string
      responses:
        "200":
          description: Successfully created a new artist
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    content:
                      type: integer
                    creation_date:
                      type: Date
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /notes/{id}:
    get:
      description: Obtain information about an Note from his or her unique id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Successfully returned an Note
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    content:
                      type: integer
                    creation_date:
                      type: Date

        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  
/notes/{id}:
    put:
      description: change the Notebook Details in the Database
      parameters:
        - name: id
          in: path
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  content:
                    type: string

      responses:
        "200":
          description: Successfully Updated an Note
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    content:
                      type: integer
                    creation_date:
                      type: Date

        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

/notes/{id}:
    delete:
      description:  Delete information about an Note from using unique id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Successfully deleted an Note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string